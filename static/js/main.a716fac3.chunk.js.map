{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleClickSortAlphabetically","setState","ALPHABET","handleClickSortByLength","LENGTH","handleClickReverse","prevState","handleClickReset","this","visibleGoods","goods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","isResetButtonVisible","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,8BAAgC,WAC9B,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,YAPvC,EAUEC,wBAA0B,WACxB,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAXvC,EAcEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAK,GAAS,MAAK,CAC1BP,YAAaO,EAAUP,gBAhB7B,EAoBEQ,iBAAmB,WACjB,EAAKN,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,MAAiCS,KAAKZ,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEZU,EA7DH,SACLC,EADK,GAGJ,IADCb,EACF,EADEA,SAAUE,EACZ,EADYA,WAENU,EAAY,YAAOC,GAEzB,OAAQb,GACN,KAAKJ,EAASS,SACZO,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKpB,EAASW,OACZK,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAW7D,OAJIhB,GACFU,EAAaO,UAGRP,EAsCgBQ,CACnBvB,EACA,CAAEG,WAAUE,eAGRmB,EAAwBrB,IAAaJ,EAASK,MAAQC,EAE5D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASb,KAAKR,8BACdmB,UAAWG,IACT,SACA,UACA,CAAE,WAAYzB,IAAaJ,EAASS,WANxC,iCAYA,wBACEkB,KAAK,SACLC,QAASb,KAAKL,wBACdgB,UAAWG,IACT,SACA,aACA,CAAE,WAAYzB,IAAaJ,EAASW,SANxC,4BAYA,wBACEgB,KAAK,SACLC,QAASb,KAAKH,mBACdc,UAAWG,IACT,SACA,aACA,CAAE,YAA2B,IAAfvB,IANlB,qBAYCmB,GACC,wBACEE,KAAK,SACLC,QAASb,KAAKD,iBACdY,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAzFpC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a716fac3.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleClickSortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleClickSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleClickReverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  handleClickReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    const isResetButtonVisible = (sortType !== SortType.NONE || isReversed);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handleClickSortAlphabetically}\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleClickSortByLength}\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleClickReverse}\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed !== true },\n            )}\n          >\n            Reverse\n          </button>\n\n          {isResetButtonVisible && (\n            <button\n              type=\"button\"\n              onClick={this.handleClickReset}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}